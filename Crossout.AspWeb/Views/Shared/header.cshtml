@using Crossout.AspWeb
@using Crossout.AspWeb.Helper
@using Crossout.AspWeb.Models
@using Crossout.AspWeb.Models.General
@using Crossout.AspWeb.Models.View
@model Crossout.AspWeb.Models.View.IViewTitle
@{
    SearchModel m = Model as SearchModel;
    BaseViewModel bvm = Model as BaseViewModel;
    var loc = bvm?.Localizations;
}

<div class="bg-dark sticky-top">
    <div class="half-hd-container">
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark py-0" role="navigation">

            <a class="navbar-brand" href="/">
                <div class="d-none d-md-block"><img alt="CrossoutDB Logo" title="@ViewHelper.GenerateTitle(Model)" class="crossoutdb-logo" src="~/img/crossoutdb_logo.png" /></div>
                <div class="d-md-none"><img alt="CrossoutDB Logo" title="@ViewHelper.GenerateTitle(Model)" class="crossoutdb-logo" src="~/img/crossoutdb_logo_compact.png" /></div>
            </a>

            @*Spacer to have the same height across devices*@
            <div style="height: 60px"></div>

            <div class="d-flex flex-fill justify-content-end align-items-center">
                <div class="overlay-container d-flex flex-fill d-lg-none">
                    <div class="mr-2 input-group">
                        <input class="form-control" size="1" type="search" placeholder="Search" aria-label="Search" id="searchBarMobile">
                    </div>
                    <div id="playerSearchResultMobile" class="dropdown-menu" data-toggle="dropdown">
                        <a class="dropdown-item" href="#">No Results</a>
                    </div>
                    <span id="inputClearMobile" class="input-clear">
                        <svg class="feather-input-clear"><use xlink:href="/icons/feather-sprite.svg#x-circle" /></svg>
                    </span>
                    <span id="playerSearchMobile" class="player-search-toggle">
                        <svg class="feather-user"><use xlink:href="/icons/feather-sprite.svg#user" /></svg>
                    </span>
                </div>

                <div>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                </div>
            </div>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="nav navbar-nav">
                    <li role="presentation" class="my-1 my-lg-0 nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "MatchHistory" ? "active" : "")"><a class="nav-link" href="~/matches"><loc model="loc" category="shared" name="header.nav.matches">Matches</loc></a></li>
                    <li role="presentation" class="my-1 my-lg-0 nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="draftsDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <loc model="loc" category="shared" name="header.nav.tools">Tools</loc>
                        </a>
                        <div class="dropdown-menu" aria-labelledby="draftsDropdown">
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "Packages" ? "active" : "")" href="~/packs"><loc model="loc" category="shared" name="header.nav.packs">Packs</loc></a>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "BadgeExchange" ? "active" : "")" href="~/tools/badgeexchange"><loc model="loc" category="shared" name="header.nav.badgeexchange">Badge Exchange</loc></a>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "Snipe" ? "active" : "")" href="~/tools/sniper"><loc model="loc" category="shared" name="header.nav.sniper">Item Sniper</loc></a>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "Salvage" ? "active" : "")" href="~/tools/salvage"><loc model="loc" category="shared" name="header.nav.salvager">Salvager</loc></a>
                            <a class="dropdown-item @(ViewContext.RouteData.Values["Action"].ToString() == "Event" ? "active" : "")" href="~/event"><loc model="loc" category="shared" name="header.nav.event">Event</loc></a>
                        </div>
                    </li>
                    <li role="presentation" class="my-1 my-lg-0 nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Tools" ? "active" : "")"><a class="nav-link" href="~/links"><loc model="loc" category="shared" name="header.nav.community">Community Links</loc></a></li>
                    <li role="presentation" class="my-1 my-lg-0 nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Info" ? "active" : "")"><a class="nav-link" href="~/info"><loc model="loc" category="shared" name="header.nav.info">Info</loc></a></li>
                    <li role="presentation" class="my-1 my-lg-0 nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="languageDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">

                        </a>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="languageDropdown">
                            <a class="dropdown-item lang-select" data-lang="en">EN</a>
                            <a class="dropdown-item lang-select" data-lang="ru">RU</a>
                        </div>
                    </li>
                    <li role="presentation" class="my-1 my-lg-0 nav-item @(ViewContext.RouteData.Values["Action"].ToString() == "Settings" ? "active" : "")">
                        <a class="nav-link" href="~/settings">
                            <svg class="feather">
                                <use xlink:href="/icons/feather-sprite.svg#settings" />
                            </svg>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="overlay-container d-none d-lg-block">
                <div>
                    <input class="form-control mr-1 ml-auto" type="search" placeholder="Search" aria-label="Search" size="28" id="searchBar">
                </div>
                <div id="playerSearchResult" class="dropdown-menu" data-toggle="dropdown">
                    <a class="dropdown-item" href="#">No Results</a>
                </div>
                <span id="inputClear" class="input-clear">
                    <svg class="feather-input-clear"><use xlink:href="/icons/feather-sprite.svg#x-circle" /></svg>
                </span>
                <span id="playerSearch" class="player-search-toggle">
                    <svg class="feather-user"><use xlink:href="/icons/feather-sprite.svg#user" /></svg>
                </span>
            </div>
        </nav>
    </div>
</div>

<script>

    var lang = Cookies.get('language');
    $('#languageDropdown').text((lang != undefined ? lang : 'en').toUpperCase())
    $('.lang-select').each(function (i, e) {
        if (this.dataset.lang === lang)
            $(e).addClass('active');
    });

    $('.lang-select').click(function () {
        Cookies.set('language', this.dataset.lang, { expires: 365 });
        location.reload();
    });

    adjustSearchBarSize();

    // Keep search bars in sync
    $('#searchBar, #searchBarMobile').keyup(function () {
        var value = this.value;
        if (this.id === 'searchBar') {
            $('#searchBarMobile').val(value);
        } else {
            $('#searchBar').val(value);
        }
    });

    // Redirect to main page if on other site
    $('#searchBar, #searchBarMobile').keyup(function (e) {
        let playerToggle = $('#playerSearch svg.active').hasClass('active');
        if (playerToggle) {
            if (e.which === 13) {
                searchPlayers(this.value)
            } else if (this.value.length <= 0) {
                $('#playerSearchResult').removeClass('show');
            }
        } else {
            if (@(ViewContext.RouteData.Values["Action"].ToString() != "Index" ? "true" : "false") && e.which === 13)
            {
                location.href = '/#search=' + this.value + '.';
            }
        }
    });

    function adjustSearchBarSize() {
        if (lang === 'ru')
            $('#searchBar').attr('size', 10);
    }

    // Disable logo on small devices while search
    //$('#searchBarMobile').on('focus focusout', function () {
    //    if ($('#searchBarMobile').is(':focus') && $('#searchBarMobile').width() < 200) {
    //        $('.navbar-brand').addClass('d-none');
    //    }
    //    else {
    //        $('.navbar-brand').removeClass('d-none');
    //    }
    //});

    //$('#searchBar').on('focus focusout', function () {
    //    if ($('#searchBar').is(':focus')) {
    //        $('#inputClear').removeClass('d-none');
    //    }
    //    else {
    //        $('#inputClear').addClass('d-none');
    //    }
    //});

    //$('#searchBarMobile').on('focus focusout', function () {
    //    if ($('#searchBarMobile').is(':focus')) {
    //        $('#inputClearMobile').removeClass('d-none');
    //    }
    //    else {
    //        $('#inputClearMobile').addClass('d-none');
    //    }
    //});

    $('#inputClear').click(function () {
        $('#searchBar').val('').trigger('keyup');
        $('#searchBarMobile').val('').trigger('keyup');
        $('#playerSearchResult, #playerSearchResultMobile').removeClass('show');
    });

    $('#playerSearch, #playerSearchMobile').click(function () {
        $('#playerSearch, #playerSearchMobile').children('svg').toggleClass('active');
        if ($(this).children('svg').hasClass('active'))
            searchPlayers($('#searchBar').val());
        else
            $('#playerSearchResult').removeClass('show');

    });

    $('#inputClearMobile').click(function () {
        $('#searchBar').val('').trigger('keyup');
        $('#searchBarMobile').val('').trigger('keyup');
        $('#playerSearchResult, #playerSearchResultMobile').removeClass('show');
    });

    function searchPlayers(searchString) {
        if (searchString.length >= 3)
            $.getJSON('/data/playersearch?search=' + searchString).done(showPlayerSearchResults);
    }

    function showPlayerSearchResults(data) {
        let searchResults = $('#playerSearchResult, #playerSearchResultMobile');
        searchResults.empty();

        for (let i = 0; i < Math.min(data.length, 9); i++) {
            searchResults.append('<a class="dropdown-item" href="' + window.origin + '/profile/' + data[i].userId + '">' + data[i].nickname + '</a>');
        }

        if (data.length < 1) {
            searchResults.append('<a class="dropdown-item disabled" href="#">No Results</a>');
        }

        searchResults.addClass('show');
    }

</script>