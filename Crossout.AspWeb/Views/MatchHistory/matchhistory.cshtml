@{
    Layout = "_Layout";
}

@using Crossout.AspWeb.Helper
@using Crossout.AspWeb.Models.Cod
@model MatchHistory
@{
    var loc = Model.Localizations;
}

<partial name="header" model="@Model" />

<div class="half-hd-container px-3">

    @if (WebSettings.Settings.EnableAds)
    {
        <partial name="leaderboardad" />
    }

    <div class="card my-1">
        <h4 class="card-title m-2">Match History <span data-toggle="collapse" data-target="#helpWrapper"><svg class="feather-help-circle"><use xlink:href="/icons/feather-sprite.svg#help-circle" /></svg></span></h4>

        <div id="helpWrapper" class="collapse">
            <h5 class="m-2"><loc model="loc" category="shared" name="title.howitworks">How it works</loc></h5>

        </div>

        <div class="m-2">
            <div class="d-flex justify-content-center row">
                <div class="btn-group btn-group-sm align-self-start col my-1" role="group">
                    <button id="typeDropdown" type="button" class="btn btn-outline-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Type
                    </button>
                    <div class="dropdown-menu" aria-labelledby="typeDropdown">
                        @foreach (var type in Model.Types)
                        {
                            <a class="dropdown-item" data-keyname="@type">@type</a>
                        }
                    </div>
                </div>
                <div class="btn-group btn-group-sm align-self-start col my-1" role="group">
                    <button id="mapDropdown" type="button" class="btn btn-outline-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Map
                    </button>
                    <div class="dropdown-menu" aria-labelledby="mapDropdown">
                        @foreach (var map in Model.Maps)
                        {
                            <a class="dropdown-item" data-keyname="@map.map_name">@map.map_display_name</a>
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col d-flex flex-row my-1">
                    <input type="text" class="form-control" id="startDate" />
                    <div class="align-self-center mx-2">to</div>
                    <input type="text" class="form-control" id="endDate" />
                </div>

                <div class="col my-1">
                    <input type="text" class="form-control" id="powerScoreFilter" name="powerScoreFilter" aria-label="Power Score" placeholder="Power Score">
                </div>
            </div>

            <div class="d-flex justify-content-center">
                <button class="btn btn-outline-secondary d-flex flex-row" onclick="applyFilter()">Apply Filter</button>
                <div height="38" width="38"><div id="loadingIcon"><img height="38" width="38" src="~/icons/Spinner-1s-64px.svg" /></div></div>
            </div>
        </div>

        <div id="table-wrapper" class="d-none">
            <table class="table table-striped table-borderless table-hover dt-responsive" id="MatchHistoryTable">
                <thead>
                    <tr>
                        <th class="dt-col" id="matchCol">
                            Match
                        </th>
                        <th class="dt-col" id="typeCol">
                            Gamemode
                        </th>
                        <th class="dt-col" id="mapCol">
                            Map
                        </th>
                        <th class="dt-col never" id="minPowerScoreCol">
                            Min Power Score
                        </th>
                        <th class="dt-col never" id="maxPowerScoreCol">
                            Max Power Score
                        </th>
                        <th class="dt-col never" id="powerScoreRangeCol">
                            Power Score Range
                        </th>
                        <th class="dt-col never" id="startCol">
                            Start
                        </th>
                        <th class="dt-col never" id="endCol">
                            End
                        </th>
                        <th class="dt-col never" id="durationCol">
                            Duration
                        </th>
                        <th class="dt-col" id="summaryCol">
                            Summary
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<link rel="stylesheet" href="~/content/datepicker.min.css">
<script src="~/scripts/datepicker.min.js?@CacheBuster.Once"></script>
<script src="~/scripts/blockies.min.js?@CacheBuster.Once"></script>
<script src="~/scripts/internal/blockyplacer.js?@CacheBuster.Once"></script>

<script>
    const startDate = datepicker('#startDate', { id: 1, dateSelected: moment().subtract(6, 'days').toDate() })
    const endDate = datepicker('#endDate', { id: 1, dateSelected: moment().toDate() })

    var domOption =
        "<'row m-1'<'d-inline-flex justify-content-start'p><'d-inline-flex ml-auto text-secondary'l>>" +
        "<tr>" +
        "<'row m-1'<'d-inline-flex justify-content-start'p><'d-none d-sm-inline-flex ml-auto text-secondary'i>>";

    $.fn.DataTable.ext.pager.numbers_length = 5;

    var order;
    var table;
    var cellWidth = '20%'
    var language = Cookies.get('language');
    $(document).ready(function () {
        var from = moment(endDate.getRange().start).unix();
        var to = moment(endDate.getRange().end).add(1, 'days').unix() - 1;
        order = [[getColumnIndexesById(['matchCol'])[0], "desc"]];
        table = $('#MatchHistoryTable').DataTable({
            ajax: '/data/matches?from=' + from + '&to=' + to + '&l=' + language,
            deferRender: true,
            dataSrc: 'data',
            columns: [
                { data: 'matchId' },
                { data: 'matchType' },
                { data: 'mapName' },
                { data: 'minPowerScore' },
                { data: 'maxPowerScore' },
                { data: 'powerScoreRange' },
                { data: 'start' },
                { data: 'end' },
                { data: 'duration' }
            ],
            columnDefs: [
                {
                    'targets': getColumnIndexesById(['matchCol']),
                    'render': function (data, type, row, meta) {
                        var start = getAdjustedTimestamp(row.start);
                        var timestamp = moment(row.start).unix();
                        var relative = moment(row.start).fromNow();
                        return '<div class="blocky" data-seed="' + data + '" data-blockytype="match"></div><div class="d-none>' + timestamp + '</div><div class=" d-flex flex-nowrap align-items-center"><a href="' + window.origin + '/match/' + data + '">' + start + '</a></div><div>(' + relative + ')</div>';
                    },
                    'width': '20%'
                },
                {
                    'targets': getColumnIndexesById(['summaryCol']),
                    'render': function (data, type, row, meta) {
                        var minPowerScore = row.minPowerScore;
                        var maxPowerScore = row.maxPowerScore;
                        var powerScoreRange = row.powerScoreRange;
                        var start = getAdjustedTimestamp(row.start);
                        var end = getAdjustedTimestamp(row.end);
                        var duration = row.duration;
                        var psDisplay = '<div class="d-flex flex-column"><div><div class="font-weight-bold">Min. Power Score: </div>' + minPowerScore + '</div><div><div class="font-weight-bold">Max. Power Score: </div>' + maxPowerScore + '</div><div><div class="font-weight-bold">Power Score Range: </div>' + powerScoreRange + '</div></div>';
                        var timeDisplay = '<div class="d-flex flex-column"><div><div class="font-weight-bold">Start: </div>' + start + '</div><div><div class="font-weight-bold">End: </div>' + end + '</div><div><div class="font-weight-bold">Duration: </div>' + duration + '</div></div>';
                        return '<div class="d-flex justify-content-between">' + psDisplay + timeDisplay + '</div>';
                    },
                    'width': '40%'
                },
                {
                    'targets': '_all',
                    'width': cellWidth
                }
            ],
            order: order,
            lengthMenu: [[10, 20, 50, -1], [10, 20, 50, "All"]],
            pagingType: "simple_numbers",
            dom: domOption,
            paging: true,
            searching: true,
            search: {
                smart: false,
                regex: false
            },
            autoWidth: false,

            responsive: {
                details: {
                    type: 'inline',
                    renderer: function (api, rowIdx, columns) {
                        var data = $.map(columns, function (col, i) {
                            return col.hidden ?
                                '<div class="d-inline-flex flex-column card p-1 px-2 m-2" data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' +
                                '<div class="font-weight-bold">' + col.title + '' + '</div> ' +
                                '<div>' + col.data + '</div>' +
                                '</div>' :
                                '';
                        }).join('');

                        return data ?
                            $('<div/>').append(data) :
                            false;
                    }
                }
            },
            drawCallback: function () { }
        });
        table.on('xhr.dt', function () {
            onXhr();
        });
        table.on('draw.dt', function () {
            onDraw();
        });
        table.on('select deselect', function (e, dt, type, indexes) {
            onSelect();
        });

        onDraw();
    });

    var firedOnce = false;
    var selectedList = [];
    function onDraw() {
        lazyLoadInstance.update();

        $('table tbody td').addClass('align-middle');

        // Make table a bit prettier
        $('.dataTables_paginate > .pagination').addClass('pagination-sm');


        placeBlockies();
    }

    function onXhr() {
        $('table tbody td').addClass('align-middle');

        $('#loadingIcon').removeClass('d-flex').addClass('d-none');
        $('#table-wrapper').removeClass('d-none');

    }

    function applyFilter() {
        var from = moment(endDate.getRange().start).unix();
        var to = moment(endDate.getRange().end).add(1, 'days').unix() - 1;

        var ajaxUrl = '/data/matches?from=' + from + '&to=' + to + '&l=' + language;

        $('#typeDropdown').next().children('.active').each(function (i, e) {
            var key = e.dataset.keyname;
            ajaxUrl += '&types=' + key;
        });

        $('#mapDropdown').next().children('.active').each(function (i, e) {
            var key = e.dataset.keyname;
            ajaxUrl += '&maps=' + key;
        });

        var psVal = parseInt($('#powerScoreFilter').val());
        if (!isNaN(psVal)) {
            ajaxUrl += '&ps=' + psVal;
        }

        $('#loadingIcon').removeClass('d-none').addClass('d-flex');

        table.ajax.url(ajaxUrl);
        table.ajax.reload();
    }

    function getColumnIndexesById(colIdArray) {
        var index = [];
        colIdArray.forEach(function (f, j) {
            $('.dt-col').each(function (i, e) {
                if ($(e).attr('id') === f) {
                    index.push(i);
                    return;
                }
            });
        });
        return index;
    }

    function olderThan(timestamp, minutes) {
        return moment.utc().subtract(minutes, 'minutes') > moment.utc(timestamp, 'YYYY-MM-DD HH:mm:ss') ? 'item-older-than-' + minutes : '';
    }

    // Keep dropdown open after selection
    $('.dropdown-menu').click(function (e) {
        e.stopPropagation();
    });

    $('.dropdown-item').click(function (e) {
        $(this).toggleClass('active');
        e.preventDefault();
    });
</script>